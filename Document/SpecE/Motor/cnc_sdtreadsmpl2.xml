<?xml version="1.0" encoding="Shift_JIS"?>
<?xml-stylesheet type="text/xsl" href="../Fmethod_xsl/fmethod_he_c.xsl"?>
<root>
    <func>


        <!-- 関数名 -->
        <title>cnc_sdtreadsmpl2</title>



        <!-- 関数宣言 -->
        <declare>
            <!-- Visual C++の宣言 -->
            <vc>
                <include>#include "fwlib32.h"</include>
                <prottype>FWLIBAPI short WINAPI cnc_sdtreadsmpl2(unsigned short FlibHndl, unsigned short *trg,long datanum, ODBSD *sampledata); </prottype>
            </vc>
        </declare>



        <!-- 解説 -->
        <doc>
            <cmn>
                <p>Reads the sampling data.<br/>
                   In case of using cnc_sdtstartsmpl2, acquire data immediately after the function call by this function. Trigger is judged by trg≠0.</p>
            </cmn>
        </doc>



        <!-- 引数 -->
        <argument>
            <common>
                <vc>
                    <item>
                        <name>FlibHndl</name>
                        <type>in</type>
                        <content>
                            <p>
                                Specify the library handle. See "<a href="handle.htm" target="_parent">Library handle</a>" for details. 
                            </p>
                        </content>
                    </item>
                    <item>
                        <name>trg</name>
                        <type>out</type>
                        <content>
                            <p>
                                Specify the pointer to the variable to store specified trigger condition by cnc_sdtstartsmpl2. Form of trigger condition is as follows.
                            </p>
                            <p><img src="Motor/sdtread.gif"/></p>
                            <p>
                                trigger condition
                            </p>
                            <table border="0" class="dd">
                                <tr><td>SEQ</td><td>：</td><td>sequence number set to trigger is executed</td></tr>
                                <tr><td>P_UP</td><td>：</td><td>the signal set to trigger rose up</td></tr>
                                <tr><td>P_DW</td><td>：</td><td>the signal set to trigger rose down</td></tr>
                                <tr><td>STSM</td><td>：</td><td>sampling information(0:under sampling, 1:end of sampling)</td></tr>
                            </table>
                            <p>※change only trigger specified by cnc_sdtstartsmpl2. </p>
                        </content>
                    </item>
                    <item>
                        <name>datanum</name>
                        <type>in</type>
                        <content>
                            <p>
                                Specify the number of sampling data which you want to read. (Specify the value of eight or more.)<br/>
                                Reading process is executed every 8WORD unit. So, specify the multiple of eight as much as possible for this value.
                            </p>
                        </content>
                    </item>
                    <item>
                        <name>sampledata</name>
                        <type>out</type>
                        <content>
                            <p>
                                Specify the pointer to the array of ODBSD structure to store the sampling data. The sampling data is acquired in order of channel which was setted by cnc_sdtsetchnl2 function.
                            </p>
                            <p>
                                The structure of ODBSD is as follows. 
                            </p>
<pre>
typedef struct odbsd {
    unsigned short  *chadata;   /* Pointer to sampling data */
    long            *count;     /* Pointer to reading number */
} ODBSD;
</pre>
                            <p>
                                Prepare the buffer area for the sampling data and the area for the number of actually read data.<br/>
                                And the each pointer is set to ODBSD structure. Prepare ODBSD structures of the same number of channels as array. And specify the top pointer of this array to this argument. <br/>
                                After the function is executed normally, the actual number of reading data in each channel is acquired in *count. <br/>
                                In case of trg≠0, information at trigger is the last aquired data. 
                            </p>

                        </content>
                    </item>
               </vc>
            </common>
        </argument>



        <!-- 戻り値 -->
        <errcode>
            <item>
                <name>EW_BUFFER</name>
                <content>
                    Read buffer is full.<br/>
                    The inner buffer for reading becomes full, so the processing was canceled. 
                </content>
            </item>
            <item>
                <name>EW_REJECT</name>
                <content>
                    CNC execution denied<br/>
                    In order to get more information for this err_no return value, execute <a href="Misc/cnc_getdtailerr.htm" target="_parent">cnc_getdtailerr</a> function.<br/>
                    <table>
                        <colgroup align="center" valign="top">
                        <colgroup align="center" valign="top">
                        <colgroup valign="top">
                        <tr><td> 1</td><td>:</td><td>Sampling start function(cnc_sdtstartsmpl2) is not executed.</td></tr>
                        </colgroup>
                        </colgroup>
                        </colgroup>
                    </table>
                </content>
            </item>
        </errcode>



        <!-- CNCオプション -->
        <option>
            <hssb>
                The extended driver/library function is necessary. 
            </hssb>
            <ethr>
                <p>The Ethernet function and the extended driver/library function are necessary.</p>
                <p>However, in case of 0i-D/F, Series 30i and PMi-A, the required CNC option is as follows.</p>
                <p>When Embedded Ethernet is used,</p>
                    <p class="dd">above two optional functions are not required.</p>
                <p>When Ethernet board is used,</p>
                    <p class="dd">only Ethernet function is required.</p>
            </ethr>

            <!-- 30i(WinCE) -->
            <is>
                <hssb>
                    The following functions are necessary for this function.
                    <ul type="disc">
                        <li>The extended driver/library function.</li>
                    </ul>
                </hssb>
            </is>
        </option>



        <!-- CNCパラメータ -->
        <parameter></parameter>



        <!-- CNCモード -->
        <mode></mode>



        <!-- 対応機種 -->
    <support>
        <!-- M（ミリング） -->
        <m>
            <fs0ia>X</fs0ia>
            <fs0ib>X</fs0ib>
            <fs0id>X</fs0id>
            <fs0if>O</fs0if>
            <fs15>X</fs15>
            <fs15i>X</fs15i>
            <fs16>X</fs16>
            <fs18>X</fs18>
            <fs21>X</fs21>
            <fs16ia>X</fs16ia>
            <fs18ia>X</fs18ia>
            <fs21ia>X</fs21ia>
            <fs16ib>X</fs16ib>
            <fs18ib>X</fs18ib>
            <fs21ib>X</fs21ib>
            <fs30ia>X</fs30ia>
            <fs30ib>O</fs30ib>
        </m>
        <!-- T（旋盤） -->
        <t>
            <fs0ia>X</fs0ia>
            <fs0ib>X</fs0ib>
            <fs0id>X</fs0id>
            <fs0if>O</fs0if>
            <fs15>X</fs15>
            <fs15i>X</fs15i>
            <fs16>X</fs16>
            <fs18>X</fs18>
            <fs21>X</fs21>
            <fs16ia>X</fs16ia>
            <fs18ia>X</fs18ia>
            <fs21ia>X</fs21ia>
            <fs16ib>X</fs16ib>
            <fs18ib>X</fs18ib>
            <fs21ib>X</fs21ib>
            <fs30ia>X</fs30ia>
            <fs30ib>O</fs30ib>
        </t>
        <!-- LC（ローダ制御） -->
        <lc>
            <fs0ia>X</fs0ia>
            <fs0ib>X</fs0ib>
            <fs0id>X</fs0id>
            <fs0if>X</fs0if>
            <fs15>X</fs15>
            <fs15i>X</fs15i>
            <fs16>X</fs16>
            <fs18>X</fs18>
            <fs21>X</fs21>
            <fs16ia>X</fs16ia>
            <fs18ia>X</fs18ia>
            <fs21ia>X</fs21ia>
            <fs16ib>X</fs16ib>
            <fs18ib>X</fs18ib>
            <fs21ib>X</fs21ib>
            <fs30ia>X</fs30ia>
            <fs30ib>X</fs30ib>
        </lc>
        <!-- P（パンチプレス） -->
        <p>
            <fs0id>X</fs0id>
            <fs0if>X</fs0if>
            <fs16i>X</fs16i>
            <fs18i>X</fs18i>
            <fs30ia>X</fs30ia>
            <fs30ib>X</fs30ib>
        </p>
        <!-- L（レーザ） -->
        <l>
            <fs0id>X</fs0id>
            <fs0if>X</fs0if>
            <fs16i>X</fs16i>
            <fs18i>X</fs18i>
            <fs30ia>X</fs30ia>
            <fs30ib>X</fs30ib>
        </l>
        <!-- W（ワイヤカット） -->
        <w>
            <fs0id>X</fs0id>
            <fs0if>X</fs0if>
            <fs16i>X</fs16i>
            <fs18i>X</fs18i>
            <fs30ia>X</fs30ia>
            <fs30ib>X</fs30ib>
        </w>
        <!-- PM（パワーメート） -->
        <pw>
            <d>X</d>
            <h>X</h>
            <a>X</a>
        </pw>
        <!-- 30i(WinCE) -->
        <is>
            <m>
               <fs30isa>X</fs30isa>
                <fs30isb>O</fs30isb>
            </m>
            <t>
                <fs30isa>X</fs30isa>
                <fs30isb>O</fs30isb>
            </t>
            <w>
                <fs30isa>X</fs30isa>
                <fs30isb>X</fs30isb>
            </w>
        </is>
    </support>



    <reference>
        <item>
            <name>cnc_sdtclrchnl</name>
            <file>motor/cnc_sdtclrchnl.htm</file>
        </item>
        <item>
            <name>cnc_sdtsetchnl2</name>
            <file>motor/cnc_sdtsetchnl2.htm</file>
        </item>
        <item>
            <name>cnc_sdtstartsmpl2</name>
            <file>motor/cnc_sdtstartsmpl2.htm</file>
        </item>
        <item>
            <name>cnc_sdtcancelsmpl</name>
            <file>motor/cnc_sdtcancelsmpl.htm</file>
        </item>
        <item>
            <name>cnc_sdtendsmpl2</name>
            <file>motor/cnc_sdtendsmpl2.htm</file>
        </item>
        <item>
            <name>cnc_sdtread1shot</name>
            <file>motor/cnc_sdtread1shot.htm</file>
        </item>
    </reference>



    </func>
</root>
