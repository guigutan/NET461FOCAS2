<?xml version="1.0" encoding="Shift_JIS"?>
<?xml-stylesheet type="text/xsl" href="../Fmethod_xsl/fmethod_he_c.xsl"?>

<root>
    <func>


        <!-- 関数名 -->
        <title>cnc_rdparar</title>



        <!-- 関数宣言 -->
        <declare>
            <!-- Visual C++の宣言 -->
            <vc>
                <include>#include "fwlib32.h"</include>
                <prottype>
                    FWLIBAPI short WINAPI cnc_rdparar(unsigned short FlibHndl, short *s_number, short axis,
                    short *e_number, short *length, void *param);
                </prottype>
            </vc>
        </declare>



        <!-- 解説 -->
        <doc>
            <cmn>
                <p>
                    s_number, e_numberで指定された範囲のaxisで指定された軸(軸型のパラメータのみ)のパラメータを読み出します。
                    データ形式は各パラメータによりますが、バイト/ワード/2ワード型のパラメータは一般に符号付のバイナリ形式です。
                </p>
                <p>axisにALL_AXESを指定することにより、指定された範囲の軸型パラメータは全軸の読み取りが行われます。</p>
                <p>
                    パラメータには型と軸の属性により以下のような種類があり、パラメータ番号ごとに異なります。
                    <a href="ncdata/cnc_rdparainfo.htm" target="_parent">cnc_rdparainfo</a>関数により、これらの属性情報をリードできます。
                </p>
                <table class="dd" border="1">
                    <colgroup valign="top"/>
                    <colgroup valign="top"/>
                    <colgroup valign="top"/>
                    <tr>
                        <th>パラメータの種類</th>
                        <th>目的</th>
                        <th>バイトサイズ</th>
                    </tr>
                    <tr>
                        <td>ビット型パラメータ</td>
                        <td>1ビットごとに意味を持つ</td>
                        <td>1</td>
                    </tr>
                    <tr>
                        <td>ビット型パラメータ</td>
                        <td>1ビットごとに意味を持つ(軸毎)</td>
                        <td>1</td>
                    </tr>
                    <tr>
                        <td>バイト型パラメータ</td>
                        <td>1バイト長のデータを記憶</td>
                        <td>1</td>
                    </tr>
                    <tr>
                        <td>バイト軸型パラメータ</td>
                        <td>1バイト長のデータを記憶(軸毎)</td>
                        <td>1</td>
                    </tr>
                    <tr>
                        <td>ワード型パラメータ</td>
                        <td>2バイト長のデータを記憶</td>
                        <td>2</td>
                    </tr>
                    <tr>
                        <td>ワード軸型パラメータ</td>
                        <td>2バイト長のデータを記憶(軸毎)</td>
                        <td>2</td>
                    </tr>
                    <tr>
                        <td>2ワード型パラメータ</td>
                        <td>4バイト長のデータを記憶</td>
                        <td>4</td>
                    </tr>
                    <tr>
                        <td>2ワード軸型パラメータ</td>
                        <td>4バイト長のデータを記憶(軸毎)</td>
                        <td>4</td>
                    </tr>
                    <tr>
                        <td>実数型パラメータ<br/>(Series 15i, 30i, 0i-D/F, PMi-A)</td>
                        <td>4バイト長のデータ部+4バイト長の小数点以下桁数部を記憶</td>
                        <td>8</td>
                    </tr>
                    <tr>
                        <td>実数軸型パラメータ<br/>(Series 15i, 30i, 0i-D/F, PMi-A)</td>
                        <td>4バイト長のデータ部+4バイト長の小数点以下桁数部を記憶(軸毎)</td>
                        <td>8</td>
                    </tr>
                </table>

                <p>
                    ただし、ビット型パラメータを1ビット単位で読み出すことはできません。
                    同一のパラメータ番号に属する8ビット(つまり1バイト)単位で一度に読み出すことになります。
                </p>
                <p>各パラメータの詳細については CNCのパラメータ説明書を参照して下さい。</p>
            </cmn>
        </doc>



        <!-- 引数 -->
        <argument>
            <common>
                <vc>
                    <item>
                        <name>FlibHndl</name>
                        <type>in</type>
                        <content>
                            <p>
                                ライブラリハンドルです。詳細は、「<a href="handle.htm" target="_parent">ライブラリハンドル</a>」を参照して下さい。
                            </p>
                        </content>
                    </item>
                    <item>
                        <name>s_number</name>
                        <type>in/out</type>
                        <content>
                            <p>
                                リードを開始するパラメータ番号を指定します。<br/>
                                関数からは、実際にリードされた最初のパラメータ番号が返ります。
                            </p>
                            <p>
                                指定可能なパラメータ番号は CNCのパラメータ説明書を参照してください。
                                また、<a href="ncdata/cnc_rdparanum.htm" target="_parent">cnc_rdparanum</a>関数、
                                及び<a href="ncdata/cnc_rdparainfo.htm" target="_parent">cnc_rdparainfo</a>関数でも取得できます。
                            </p>
                        </content>
                    </item>
                    <item>
                        <name>e_number</name>
                        <type>in/out</type>
                        <content>
                            <p>
                                リードを終了するパラメータ番号を指定します。<br/>
                                関数からは、実際にリードされた最後のパラメータ番号が返ります。
                            </p>
                            <p>
                                なお、CNC側ソフトの機能追加などに伴い、パラメータも追加されることがあります。
                                読み出す範囲内にパラメータが追加された場合、エラーになったり(戻り値:EW_LENGTH)、
                                アプリケーションプログラムの処理が正しく実行できなくなる可能性があります。
                                このようなことを避けるために、パラメータ番号が連続している部分のみをまとめて読み出し範囲に指定するようにして下さい。
                            </p>
                        </content>
                    </item>
                    <item>
                        <name>axis</name>
                        <type>in</type>
                        <content>
                            <p>リードする軸番号を指定します。</p>
                            <table class="dd">
                                <colgroup align="left" valign="top">
                                    <tr>
                                        <td>0</td>
                                        <td>:</td>
                                        <td>軸型でないパラメータ</td>
                                    </tr>
                                    <tr>
                                        <td>1〜m</td>
                                        <td>:</td>
                                        <td>軸型パラメータの1軸指定(m : 最大制御軸数)</td>
                                    </tr>
                                    <tr>
                                        <td>ALL_AXES</td>
                                        <td>:</td>
                                        <td>全軸指定(ALL_AXES : -1)</td>
                                    </tr>
                                </colgroup>
                            </table>
                            <p>
                                なお、axisに何を指定しても軸形でないパラメータは読み出されますが、指定範囲内に軸形のパラメータが存在する時、
                                axis=0を指定するとエラーとなります(戻り値:EW_ATTRIB)。
                            </p>
                        </content>
                    </item>
                    <item>
                        <name>length</name>
                        <type>in/out</type>
                        <content>
                            <p>指定した範囲のパラメータを格納するのに必要なデータブロック長を指定します。</p>
                            <p>
                                パラメータ１個あたりは下図のようになり、それがパラメータ番号順(昇順)に指定された個数分並びますので、
                                指定するlengthはそれらの合計になります。
                            </p>
                            <p class="dd">4+(パラメータのバイトサイズ)×(読み出す軸数)</p>
                            <p>関数からは、実際にリードしたサイズが返りますので長めに指定することができます。</p>
                            <p>
                                下図はパラメータのサイズが 2バイトの場合です。
                                パラメータのサイズが 1, 2バイトで 1個あたりのlengthが 4の倍数にならない場合は、最後にダミー領域が必要です。
                                パラメータのサイズが 4バイト、または8バイトの場合は、1個(1軸)あたりのサイズがそれぞれ 4バイト、
                                8バイトになりますのでダミー領域は不要です。
                            </p>
                            <p><b>IODBPSD</b></p>
                            <table>
                                <colgroup align="left" valign="top">
                                <colgroup align="left" valign="top">
                                <colgroup align="left" valign="top">
                                <tr>
                                    <th>軸なし/1軸指定</th>
                                    <th>全軸指定</th>
                                </tr>
                                <tr>
                                    <td valign="top"><img src="ncdata/nprm.gif"/></td>
                                    <td valign="top"><img src="ncdata/nprma.gif"/></td>
                                </tr>
                                </colgroup>
                                </colgroup>
                                </colgroup>
                            </table>
                            <ul>
                                <p>
                                    n = 最大制御軸数(有効データは制御軸数分)
                                </p>
                            </ul>

                            <p class="info">
                                なお、Series 15i, 16/18/21, 16i/18i/21i, 0i, 30i, Power Mate i, PMi-A の場合、
                                スピンドル関係パラメータは軸形として扱われますが、有効データはスピンドルの個数分となります。
                            </p>
                        </content>
                    </item>
                    <item>
                        <name>param</name>
                        <type>out</type>
                        <content>
                            <p>パラメータを返す領域へのポインタです。<br/>個々のパラメータの参照は、IODBPSD構造体を使用します。</p>
<pre>
・Series 15, 16/18/21, 16i/18i/21i, 0i-A/B, Power Mate i の場合

typedef struct  iodbpsd {
    short datano;              /* パラメータ番号 */
    short type;                /* 上位バイト:型属性 */
                               /* 下位バイト:軸番号 */
    union {
        char  cdata;            /* ビット/バイト形パラメータ */
        short idata;            /* ワード形パラメータ */
        long  ldata;            /* 2ワード形パラメータ */
        char  cdatas[MAX_AXIS]; /* ビット/バイト軸形パラメータ */
        short idatas[MAX_AXIS]; /* ワード軸形パラメータ */
        long  ldatas[MAX_AXIS]; /* 2ワード軸形パラメータ */
    } u ;
} IODBPSD ;                   /* MAX_AXIS : 最大制御軸数 */
</pre>
<pre>
・Series 15i, 30i, 0i-D/F, PMi-A, Ethernet接続 の場合

typedef struct realprm {       /* 実数型パラメータ */
   long prm_val;               /* データ部 */
   long dec_val;               /* 小数点以下桁数部 */
} REALPRM;

typedef struct  iodbpsd {
   short datano;               /* パラメータ番号 */
   short type;                 /* 上位バイト:型属性 */
                               /* 下位バイト:軸番号 */
   union {
      char    cdata;           /* ビット/バイト型パラメータ */
      short   idata;           /* ワード型パラメータ */
      long    ldata;           /* 2ワード型パラメータ */
      REALPRM rdata;           /* 実数型パラメータ */
      char    cdatas[MAX_AXIS];/* ビット/バイト軸型パラメータ*/
      short   idatas[MAX_AXIS];/* ワード軸型パラメータ */
      long    ldatas[MAX_AXIS];/* 2ワード軸型パラメータ */
      REALPRM rdatas[MAX_AXIS];/* 実数軸型パラメータ */
   } u;
} IODBPSD ;                    /* MAX_AXIS : 最大制御軸数 */
</pre>
                            <dl>
                                <dt>datano</dt>
                                <dd>リードしたパラメータ番号が格納されます。</dd>
                                <dt>type</dt>
                                <dd>リードしたパラメータの属性が格納されます。</dd>
                                <dd>上位バイト : 型属性
                                    <table class="dd">
                                        <tr>
                                            <td>0</td>
                                            <td>:</td>
                                            <td>ビット型</td>
                                        </tr>
                                        <tr>
                                            <td>1</td>
                                            <td>:</td>
                                            <td>バイト型</td>
                                        </tr>
                                        <tr>
                                            <td>2</td>
                                            <td>:</td>
                                            <td>ワード型</td>
                                        </tr>
                                        <tr>
                                            <td>3</td>
                                            <td>:</td>
                                            <td>2ワード型</td>
                                        </tr>
                                        <tr>
                                            <td>4</td>
                                            <td>:</td>
                                            <td>実数型 (Series 15i, 30i, 0i-D/F, PMi-A)</td>
                                        </tr>
                                    </table>
                                </dd>
                                <dd>下位バイト : 軸番号
                                    <table class="dd">
                                        <tr>
                                            <td>0</td>
                                            <td>:</td>
                                            <td>軸型でないパラメータ</td>
                                        </tr>
                                        <tr>
                                            <td>1〜m</td>
                                            <td>:</td>
                                            <td>軸型パラメータの1軸指定(m : 最大制御軸数)</td>
                                        </tr>
                                        <tr>
                                            <td>ALL_AXES</td>
                                            <td>:</td>
                                            <td>軸型パラメータの全軸指定(ALL_AXES : -1)</td>
                                        </tr>
                                    </table>
                                </dd>
                                <dt>rdata, rdatas ( Series 15i, 30i, 0i-D/F, PMi-A )</dt>
                                <dd>実数型パラメータが格納されます。prm_valにデータが、dec_valに小数点以下桁数が格納されます。</dd>
                                <dd>
                                    <div class="dd">
                                        <p>実数型パラメータ = prm_val * 10 ** (-dec_val)<br/>
                                        (例) prm_val = 12345, dec_val = 3の場合、実数型パラメータが12.345であることを表します。</p>
                                    </div>
                                </dd>
                            </dl>
                        </content>
                    </item>
                </vc>
            </common>

            <!-- 30i(WinCE) -->
            <is>
                <hssb>
                    <vc>
                        <item>
                            <name>FlibHndl</name>
                            <type>in</type>
                            <content>
                                <p>
                                    ライブラリハンドルです。
                                    詳細は、「<a href="handle.htm" target="_parent">ライブラリハンドル</a>」を参照して下さい。
                                </p>
                            </content>
                        </item>
                        <item>
                            <name>s_number</name>
                            <type>in/out</type>
                            <content>
                                <p>
                                    リードを開始するパラメータ番号を指定します。<br/>
                                    関数からは、実際にリードされた最初のパラメータ番号が返ります。
                                </p>
                                <p>
                                    指定可能なパラメータ番号は CNCのパラメータ説明書を参照してください。
                                    また、<a href="ncdata/cnc_rdparanum.htm" target="_parent">cnc_rdparanum</a>関数、及び<a href="ncdata/cnc_rdparainfo.htm" target="_parent">cnc_rdparainfo</a>関数でも取得できます。
                                </p>
                            </content>
                        </item>
                        <item>
                            <name>e_number</name>
                            <type>in/out</type>
                            <content>
                                <p>
                                    リードを終了するパラメータ番号を指定します。<br/>
                                    関数からは、実際にリードされた最後のパラメータ番号が返ります。
                                </p>
                                <p>
                                    なお、CNC側ソフトの機能追加などに伴い、パラメータも追加されることがあります。
                                    読み出す範囲内にパラメータが追加された場合、エラーになったり(戻り値:EW_LENGTH)、アプリケーションプログラムの処理が正しく実行できなくなる可能性があります。このようなことを避けるために、パラメータ番号が連続している部分のみをまとめて読み出し範囲に指定するようにして下さい。
                                </p>
                            </content>
                        </item>
                        <item>
                            <name>axis</name>
                            <type>in</type>
                            <content>
                                <p>リードする軸番号を指定します。</p>
                                <table class="dd">
                                    <colgroup align="left" valign="top">
                                        <tr>
                                            <td>0</td>
                                            <td>:</td>
                                            <td>軸型でないパラメータ</td>
                                        </tr>
                                        <tr>
                                            <td>1〜m</td>
                                            <td>:</td>
                                            <td>軸型パラメータの1軸指定(m : 最大制御軸数)</td>
                                        </tr>
                                        <tr>
                                            <td>ALL_AXES</td>
                                            <td>:</td>
                                            <td>全軸指定(ALL_AXES : -1)</td>
                                        </tr>
                                    </colgroup>
                                </table>
                                <p>
                                    なお、axisに何を指定しても軸形でないパラメータは読み出されますが、指定範囲内に軸形のパラメータが存在する時、axis=0を指定するとエラーとなります(戻り値:EW_ATTRIB)。
                                </p>
                            </content>
                        </item>
                        <item>
                            <name>length</name>
                            <type>in/out</type>
                            <content>
                                <p>指定した範囲のパラメータを格納するのに必要なデータブロック長を指定します。</p>
                                <p>
                                    パラメータ１個あたりは下図のようになり、それがパラメータ番号順(昇順)に指定された個数分並びますので、指定するlengthはそれらの合計になります。
                                </p>
                                <p class="dd">4+(パラメータのバイトサイズ)×(読み出す軸数)</p>
                                <p>関数からは、実際にリードしたサイズが返りますので長めに指定することができます。</p>
                                <p>
                                    下図はパラメータのサイズが 2バイトの場合です。パラメータのサイズが 1, 2バイトで1個あたりのlengthが 4の倍数にならない場合は、最後にダミー領域が必要です。パラメータのサイズが 4バイト、または8バイトの場合は、1個(1軸)あたりのサイズがそれぞれ4バイト、8バイトになりますのでダミー領域は不要です。
                                </p>
                                <p><b>IODBPSD</b></p>
                                <table>
                                    <colgroup align="left" valign="top">
                                    <colgroup align="left" valign="top">
                                    <colgroup align="left" valign="top">
                                    <tr>
                                        <th>軸なし/1軸指定</th>
                                        <th>全軸指定</th>
                                    </tr>
                                    <tr>
                                        <td valign="top"><img src="ncdata/nprm.gif"/></td>
                                        <td valign="top"><img src="ncdata/nprma.gif"/></td>
                                    </tr>
                                    </colgroup>
                                    </colgroup>
                                    </colgroup>
                                    <tr>
                                        <td></td>
                                        <td>
                                            <p>
                                                n = 最大制御軸数(有効データは制御軸数分)
                                            </p>
                                        </td>
                                    </tr>
                                </table>
                                <p class="info">
                                    スピンドル関係パラメータは軸形として扱われますが、有効データはスピンドルの個数分となります。
                                </p>
                            </content>
                        </item>
                        <item>
                            <name>param</name>
                            <type>out</type>
                            <content>
                                <p>パラメータを返す領域へのポインタです。<br/>個々のパラメータの参照は、IODBPSD構造体を使用します。</p>
<pre>
typedef struct realprm {       /* 実数型パラメータ */
   long prm_val;               /* データ部 */
   long dec_val;               /* 小数点以下桁数部 */
} REALPRM;

typedef struct  iodbpsd {
   short datano;               /* パラメータ番号 */
   short type;                 /* 上位バイト:型属性 */
                               /* 下位バイト:軸番号 */
   union {
      char    cdata;           /* ビット/バイト型パラメータ */
      short   idata;           /* ワード型パラメータ */
      long    ldata;           /* 2ワード型パラメータ */
      REALPRM rdata;           /* 実数型パラメータ */
      char    cdatas[MAX_AXIS];/* ビット/バイト軸型パラメータ*/
      short   idatas[MAX_AXIS];/* ワード軸型パラメータ */
      long    ldatas[MAX_AXIS];/* 2ワード軸型パラメータ */
      REALPRM rdatas[MAX_AXIS];/* 実数軸型パラメータ */
   } u;
} IODBPSD ;                    /* MAX_AXIS : 最大制御軸数 */
</pre>
                                <dl>
                                    <dt>datano</dt>
                                    <dd>リードしたパラメータ番号が格納されます。</dd>
                                    <dt>type</dt>
                                    <dd>リードしたパラメータの属性が格納されます。</dd>
                                    <dd>上位バイト : 型属性
                                        <table class="dd">
                                            <tr>
                                                <td>0</td>
                                                <td>:</td>
                                                <td>ビット型</td>
                                            </tr>
                                            <tr>
                                                <td>1</td>
                                                <td>:</td>
                                                <td>バイト型</td>
                                            </tr>
                                            <tr>
                                                <td>2</td>
                                                <td>:</td>
                                                <td>ワード型</td>
                                            </tr>
                                            <tr>
                                                <td>3</td>
                                                <td>:</td>
                                                <td>2ワード型</td>
                                            </tr>
                                            <tr>
                                                <td>4</td>
                                                <td>:</td>
                                                <td>実数型</td>
                                            </tr>
                                        </table>
                                    </dd>
                                    <dd>下位バイト : 軸番号
                                        <table class="dd">
                                            <tr>
                                                <td>0</td>
                                                <td>:</td>
                                                <td>軸型でないパラメータ</td>
                                            </tr>
                                            <tr>
                                                <td>1〜m</td>
                                                <td>:</td>
                                                <td>軸型パラメータの1軸指定(m : 最大制御軸数)</td>
                                            </tr>
                                            <tr>
                                                <td>ALL_AXES</td>
                                                <td>:</td>
                                                <td>軸型パラメータの全軸指定(ALL_AXES : -1)</td>
                                            </tr>
                                        </table>
                                    </dd>
                                    <dt>rdata, rdatas</dt>
                                    <dd>実数型パラメータが格納されます。prm_valにデータが、dec_valに小数点以下桁数が格納されます。</dd>
                                    <dd>
                                        <div class="dd">
                                            <p>実数型パラメータ = prm_val * 10 ** (-dec_val)<br/>
                                            (例) prm_val = 12345, dec_val = 3の場合、実数型パラメータが12.345であることを表します。</p>
                                        </div>
                                    </dd>
                                </dl>
                            </content>
                        </item>
                    </vc>
                </hssb>
            </is>
        </argument>



        <!-- 戻り値 -->
        <errcode>
            <item>
                <name>EW_LENGTH</name>
                <content>データブロック長の誤り<br/>パラメータ格納領域のサイズ(length)が不正です。</content>
            </item>
            <item>
                <name>EW_NUMBER</name>
                <content>データ番号の誤り<br/>パラメータ番号(s_number, e_number)の指定が不適切です。</content>
            </item>
            <item>
                <name>EW_ATTRIB</name>
                <content>データ属性の誤り<br/>軸番号(axis)の指定が不適切です。</content>
            </item>
            <item class="xis">
                <name>EW_PASSWD</name>
                <content>指定されたパラメータは保護されているため読み込めません。<br/>( Series 16i/18i/21i, 0i-A/B/C )</content>
            </item>
        </errcode>



        <!-- CNCオプション -->
        <option>
            <hssb>拡張ドライバ/ライブラリ機能が必要です。</hssb>
            <ethr><p>イーサネット機能と拡張ドライバ/ライブラリ機能が必要です。</p>
                  <p>但し、Series 16i/18i/21i-B, 0i-B/C/D/F, Series 30i, PMi-A に関しては次のようになります。</p>
                  <p>組込みイーサネットを使用のとき、</p>
                  <p><ul>上記２つの機能は必要ありません。</ul></p>
                  <p>イーサネットボードを使用のとき、</p>
                  <p><ul>イーサネット機能のみ必要です。</ul></p>
            </ethr>
        </option>



        <!-- CNCパラメータ -->
        <parameter></parameter>



        <!-- CNCモード -->
        <mode></mode>



        <!-- 対応機種 -->
        <support>
            <!-- M（ミリング） -->
            <m>
                <fs0ia>H</fs0ia>
                <fs0ib>O</fs0ib>
                <fs0id>O</fs0id>
                <fs0if>O</fs0if>
                <fs15>H</fs15>
                <fs15i>O</fs15i>
                <fs16>H</fs16>
                <fs18>H</fs18>
                <fs21>H</fs21>
                <fs16ia>O</fs16ia>
                <fs18ia>O</fs18ia>
                <fs21ia>O</fs21ia>
                <fs16ib>O</fs16ib>
                <fs18ib>O</fs18ib>
                <fs21ib>O</fs21ib>
                <fs30ia>O</fs30ia>
                <fs30ib>O</fs30ib>
            </m>
            <!-- T（旋盤） -->
            <t>
                <fs0ia>H</fs0ia>
                <fs0ib>O</fs0ib>
                <fs0id>O</fs0id>
                <fs0if>O</fs0if>
                <fs15>H</fs15>
                <fs15i>X</fs15i>
                <fs16>H</fs16>
                <fs18>H</fs18>
                <fs21>H</fs21>
                <fs16ia>O</fs16ia>
                <fs18ia>O</fs18ia>
                <fs21ia>O</fs21ia>
                <fs16ib>O</fs16ib>
                <fs18ib>O</fs18ib>
                <fs21ib>O</fs21ib>
                <fs30ia>O</fs30ia>
                <fs30ib>O</fs30ib>
            </t>
            <!-- LC（ローダ制御） -->
            <lc>
                <fs0ia>X</fs0ia>
                <fs0ib>X</fs0ib>
                <fs0id>X</fs0id>
                <fs0if>X</fs0if>
                <fs15>X</fs15>
                <fs15i>X</fs15i>
                <fs16>H</fs16>
                <fs18>H</fs18>
                <fs21>H</fs21>
                <fs16ia>H</fs16ia>
                <fs18ia>H</fs18ia>
                <fs21ia>H</fs21ia>
                <fs16ib>H</fs16ib>
                <fs18ib>H</fs18ib>
                <fs21ib>H</fs21ib>
                <fs30ia>X</fs30ia>
                <fs30ib>X</fs30ib>
            </lc>
            <!-- P（パンチプレス） -->
            <p>
                <fs0id>O</fs0id>
                <fs0if>O</fs0if>
                <fs16i>O</fs16i>
                <fs18i>O</fs18i>
                <fs30ia>X</fs30ia>
                <fs30ib>O</fs30ib>
            </p>
            <!-- L（レーザ） -->
            <l>
                <fs0id>X</fs0id>
                <fs0if>X</fs0if>
                <fs16i>O</fs16i>
                <fs18i>X</fs18i>
                <fs30ia>X</fs30ia>
                <fs30ib>O</fs30ib>
            </l>
            <!-- W（ワイヤカット） -->
            <w>
                <fs0id>X</fs0id>
                <fs0if>X</fs0if>
                <fs16i>O</fs16i>
                <fs18i>O</fs18i>
                <fs30ia>O</fs30ia>
                <fs30ib>O</fs30ib>
            </w>
            <!-- PM（パワーメート） -->
            <pw>
                <d>O</d>
                <h>O</h>
                <a>O</a>
            </pw>
            <!-- 30i(WinCE) -->
            <is>
                <m>
                    <fs30isa>O</fs30isa>
                    <fs30isb>O</fs30isb>
                </m>
                <t>
                    <fs30isa>O</fs30isa>
                    <fs30isb>O</fs30isb>
                </t>
                <!-- W（ワイヤカット） -->
                <w>
                    <fs30isa>O</fs30isa>
                    <fs30isb>O</fs30isb>
                </w>
            </is>
        </support>



        <!-- 参照 -->
        <reference>
            <item>
                <name>cnc_rdparam</name>
                <file>ncdata/cnc_rdparam.htm</file>
            </item>
            <item>
                <name>cnc_wrparam</name>
                <file>ncdata/cnc_wrparam.htm</file>
            </item>
            <item>
                <name>cnc_wrparas</name>
                <file>ncdata/cnc_wrparas.htm</file>
            </item>
            <item>
                <name>cnc_rdparam_ext</name>
                <file>ncdata/cnc_rdparam_ext.htm</file>
            </item>
            <item>
                <name>cnc_rdparainfo</name>
                <file>ncdata/cnc_rdparainfo.htm</file>
            </item>
            <item>
                <name>cnc_rdparanum</name>
                <file>ncdata/cnc_rdparanum.htm</file>
            </item>
        </reference>



        <!-- プログラム例 -->
        <example>
<vc>
以下のプログラムは指定された範囲および軸のパラメータを読みだし画面に表示します。( Series 16i/18i/21i, 0i-A/B/C )

#include "fwlib32.h"

/* start/end are start/end number to be read, axis is axis number. */
short example( short *start, short *end, short axis )
{
        ODBSYS info ;
        IODBPSD *param, *ptr ;
        short ret, idx1, idx2, axno, inc ;
        short length;
        cnc_sysinfo( &#38;info ) ;
        axno = atoi( info.axes ) ;
        length = 4 + ((sizeof(IODBPSD) - 4) * (end - start + 1)); // In case of axis type parameters
        param = (IODBPSD *)calloc( 1, length ) ;
        ret = cnc_rdparar( h, start, axis, end, &#38;length, param ) ;
        ptr = param ;
        if ( !ret ) {
            for ( idx1 = start ; idx1 &#60;= end ; idx1++ ) {
                if ( ( idx1 != 0 ) &#38;&#38; ( ptr-&#62;datano == 0 ) ) break ;
                printf( "No.%05d ", ptr-&#62;datano ) ;
                switch ( ptr-&#62;type &#62;&#62; 8 ) {
                        case 0: printf( "BIT " ) ; break ;
                        case 1: printf( "BYTE" ) ; break ;
                        case 2: printf( "WORD" ) ; break ;
                        case 3: printf( "2WRD" ) ; break ;
                }

                switch ( ptr-&#62;type &#38; 0xff ) {
                    case 0xff :
                        for ( idx2 = 0 ; idx2 &#60; axno ; idx2++ ) {
                            printf( "  #%d:", idx2+1 ) ;
                            switch ( ptr-&#62;type &#62;&#62; 8 ) {
                                case 0:
                                    printf( "0x%02X",
                                      (unsigned char)(ptr-&#62;u.cdatas[idx2]) ) ;
                                    inc = 1 ; break ;
                                case 1:
                                    printf( "%d", ptr-&#62;u.cdatas[idx2] ) ;
                                    inc = 1 ; break ;
                                case 2:
                                    printf( "%d", ptr-&#62;u.idatas[idx2] ) ;
                                    inc = 2 ; break ;
                                case 3:
                                    printf( "%ld", ptr-&#62;u.ldatas[idx2] ) ;
                                    inc = 4 ; break ;
                            }
                        }
                        putchar( '\n' ) ;
                        ptr = (IODBPSD *)(((char *)ptr)+4+MAX_AXIS*inc) ;
                        /* MAX_AXIS = 8 */
                        break ;
                    default :
                        printf( "  #%d:", ptr-&#62;type &#38; 0xff ) ;
                    case 0 :
                        switch ( ptr-&#62;type &#62;&#62; 8 ) {
                            case 0:
                                printf( "  0x%02X\n", (unsigned char)(ptr-&#62;u.cdata) ) ;
                                inc = 1+3 ; break ;
                            case 1:
                                printf( "  %d\n", ptr-&#62;u.cdata ) ;
                                inc = 1+3 ; break ;
                            case 2:
                                printf( "  %d\n", ptr-&#62;u.idata ) ;
                                inc = 2+2 ; break ;
                            case 3:
                                printf( "  %ld\n", ptr-&#62;u.ldata ) ;
                                inc = 4 ; break ;
                        }
                        ptr = (IODBPSD *)(((char *)ptr)+4+inc) ;
                        break ;
                }
            }
        }
        else
                printf( "ERROR!(%d)\n", ret ) ;
        free( param ) ;
        return ( ret ) ;
}
</vc>
        </example>



    </func>
</root>
